diagonals 2D

#include <stdio.h>
#define SIZE 10
void diagonals2D(int ar[][SIZE], int rowSize, int colSize, int *sum1, int *sum2);
int main() {
    int ar[SIZE][SIZE], rowSize, colSize;
    int i, j, sum1=0, sum2=0;
    printf("Enter row size of the 2D array: \n");
    scanf("%d", &rowSize);
    printf("Enter column size of the 2D array: \n");
    scanf("%d", &colSize);
    printf("Enter the matrix (%dx%d): \n", rowSize, colSize);
    for (i=0; i<rowSize; i++)
    {   for (j=0; j<colSize; j++)
            scanf("%d", &ar[i][j]);   }
    diagonals2D(ar, rowSize, colSize, &sum1, &sum2);
    printf("sum1=%d; sum2=%d\n",sum1,sum2);
    }
void diagonals2D(int ar[][SIZE], int rowSize, int colSize, int *sum1, int *sum2) {
    /* Write your program code here */
    int i = 0;
    *sum1,*sum2 = 0;
    for (i=0;i<colSize;i++)
    {
        *sum1 += ar[i][i];
        *sum2 += ar[i][rowSize-i-1];

    }

    }

-------------------------------------------------------------------------------------------------------------
transpose 2D

#include <stdio.h>
#define SIZE 10
void transpose2D(int ar[][SIZE], int rowSize, int colSize);
void display(int ar[][SIZE], int rowSize, int colSize); int main() {
    int ar[SIZE][SIZE], rowSize, colSize;
    int i,j;
    printf("Enter row size of the 2D array: \n");
    scanf("%d", &rowSize);
    printf("Enter column size of the 2D array: \n");
    scanf("%d", &colSize);
    printf("Enter the matrix (%dx%d): \n", rowSize, colSize);
    for (i=0; i<rowSize; i++)
    {
        for (j=0; j<colSize; j++)
            scanf("%d", &ar[i][j]);  }
    printf("transpose2D(): \n");
    transpose2D(ar, rowSize, colSize);
    display(ar, rowSize, colSize);
    return 0;
    }

void display(int ar[][SIZE], int rowSize, int colSize) {
    int l,m;
    for (l = 0; l < rowSize; l++) {
            for (m = 0; m < colSize; m++)
                printf("%d ", ar[l][m]);
    printf("\n");    } }

void transpose2D(int ar[][SIZE], int rowSize, int colSize)
{
    int i,j,temp;
    temp = 0;

    for (i=0;i<rowSize;i++)
    {
        j= i+1;
        for (j;j<colSize;j++)
        {
            temp = ar[i][j];
            ar[i][j] = ar[j][i];
            ar[j][i] = temp;
        }
    }
    /* Write your program code here */
    }
    
-------------------------------------------------------------------------------------------------------------
min of max 2D
#include <stdio.h>
#define SIZE 10
int minOfMax2D(int ar[][SIZE], int rowSize, int colSize);
 int main()  {
     int ar[SIZE][SIZE], rowSize, colSize;
     int i,j,min;
     printf("Enter row size of the 2D array: \n");
     scanf("%d", &rowSize);
     printf("Enter column size of the 2D array: \n");
     scanf("%d", &colSize);
     printf("Enter the matrix (%dx%d): \n", rowSize, colSize);
     for (i=0; i<rowSize; i++)
        { for (j=0; j<colSize; j++)
                scanf("%d", &ar[i][j]);
        }
     min=minOfMax2D(ar, rowSize, colSize);
     printf("minOfMax2D(): %d\n", min);
     return 0;
     }

int minOfMax2D(int ar[][SIZE], int rowSize, int colSize) {
      /* Write your program code here */
      int array[20];
      int i,j = 0;
      int min,max;
      for (i=0;i<rowSize;i++)
      {
          for (j=0;j<colSize;j++)
        {
            max = 0;
            if (max<ar[i][j])
                max = ar[i][j];
        }
      array[i] = max;
      }
      int k;
      min = array[0];
      for (k=0;k<rowSize;k++)
      {
          if (array[k]<min)
            min = array[k];
      }


      return min;

      }

-------------------------------------------------------------------------------------------------------------
compress 2D ***
#include <stdio.h>
#define SIZE 100
void compress2D(int data[SIZE][SIZE], int rowSize, int colSize);
int main()  {
    int data[SIZE][SIZE];
    int i,j;
    int rowSize, colSize;
    printf("Enter the array size (rowSize, colSize): \n");
    scanf("%d %d", &rowSize, &colSize);
    printf("Enter the matrix (%dx%d): \n", rowSize, colSize);
    for (i=0; i<rowSize; i++)
    {
        for (j=0; j<colSize; j++)
            scanf("%d", &data[i][j]);   }
    printf("compress2D(): \n");
    compress2D(data, rowSize, colSize);
    return 0;
    }
void compress2D(int data[SIZE][SIZE], int rowSize, int colSize)  {
    int i,j,k,count=0;
    for (i=0;i<rowSize;i++)
    {
        for(j=0;j<colSize-1;j++)
        {
            k=0;
            count = 1;
            if (data[i][j]==data[i][j+1])
             {
                 count++;
                for (k=j+3;k<colSize;k++)
                {
                    data[i][k] = data[i][k-1];
                }
                colSize--;
             }
            else
            {
                colSize++;
                for (k=colSize;k>j+1;k--)
                {
                    data[i][k] = data[i][k-1];
                }
                count = 1;
            }
            data[i][j+1] = count;



        }
    }
}
         /* Write your program code here */
         //first occurrence is number, next to it is no. of occurrence}

-------------------------------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------------------------------

